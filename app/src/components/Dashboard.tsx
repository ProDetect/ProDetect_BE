import { TriangleAlert, TrendingUp, FileText, Users, Clock, CircleCheck, CircleAlert, Circle } from "lucide-react";
import { useEffect, useState } from 'react';\nimport Layout from './Layout';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\n\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LineChart, Line, PieChart, Pie, Cell } from 'recharts';\n\n// Mock data for dashboard\nconst alertTrendData = [\n  { month: 'Jan', alerts: 45 },\n  { month: 'Feb', alerts: 52 },\n  { month: 'Mar', alerts: 48 },\n  { month: 'Apr', alerts: 61 },\n  { month: 'May', alerts: 55 },\n  { month: 'Jun', alerts: 67 },\n];\n\nconst riskDistributionData = [\n  { name: 'Low', value: 60, color: '#10b981' },\n  { name: 'Medium', value: 25, color: '#f59e0b' },\n  { name: 'High', value: 12, color: '#ef4444' },\n  { name: 'Critical', value: 3, color: '#7c2d12' },\n];\n\nconst recentAlerts = [\n  {\n    id: '1',\n    customer: 'John Doe',\n    type: 'High Value Transaction',\n    amount: '₦15,000,000',\n    risk: 'High',\n    time: '10 minutes ago',\n    status: 'Open'\n  },\n  {\n    id: '2',\n    customer: 'ABC Corporation',\n    type: 'Velocity Check',\n    amount: '₦8,500,000',\n    risk: 'Medium',\n    time: '1 hour ago',\n    status: 'Investigating'\n  },\n  {\n    id: '3',\n    customer: 'Jane Smith',\n    type: 'Structuring Pattern',\n    amount: '₦4,800,000',\n    risk: 'High',\n    time: '2 hours ago',\n    status: 'Open'\n  },\n];\n\nexport default function Dashboard() {\n  const [stats, setStats] = useState({\n    totalAlerts: 0,\n    openCases: 0,\n    pendingReports: 0,\n    activeCustomers: 0,\n    alertTrend: '+12%',\n    caseResolutionRate: '94%',\n    avgResolutionTime: '2.3 days'\n  });\n\n  useEffect(() => {\n    // Simulate loading dashboard data\n    setTimeout(() => {\n      setStats({\n        totalAlerts: 234,\n        openCases: 18,\n        pendingReports: 5,\n        activeCustomers: 12567,\n        alertTrend: '+12%',\n        caseResolutionRate: '94%',\n        avgResolutionTime: '2.3 days'\n      });\n    }, 1000);\n  }, []);\n\n  const getRiskBadgeColor = (risk: string) => {\n    switch (risk.toLowerCase()) {\n      case 'critical': return 'destructive';\n      case 'high': return 'destructive';\n      case 'medium': return 'default';\n      case 'low': return 'secondary';\n      default: return 'default';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'open': return <AlertCircle className=\"h-4 w-4 text-orange-500\" />;\n      case 'investigating': return <Clock className=\"h-4 w-4 text-blue-500\" />;\n      case 'closed': return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'escalated': return <XCircle className=\"h-4 w-4 text-red-500\" />;\n      default: return <AlertCircle className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  return (\n    <Layout>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-3xl font-bold text-gray-900\">AML Dashboard</h2>\n            <p className=\"text-gray-600 mt-1\">Real-time monitoring and compliance overview</p>\n          </div>\n          <div className=\"flex items-center space-x-3\">\n            <Badge variant=\"outline\" className=\"text-green-600 border-green-600\">\n              System Operational\n            </Badge>\n            <Badge variant=\"secondary\">\n              Last Updated: {new Date().toLocaleTimeString()}\n            </Badge>\n          </div>\n        </div>\n\n        {/* Key Metrics */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Total Alerts</CardTitle>\n              <AlertTriangle className=\"h-4 w-4 text-orange-500\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{stats.totalAlerts.toLocaleString()}</div>\n              <p className=\"text-xs text-muted-foreground\">\n                <span className=\"text-green-600\">{stats.alertTrend}</span> from last month\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Open Cases</CardTitle>\n              <FileText className=\"h-4 w-4 text-blue-500\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{stats.openCases}</div>\n              <p className=\"text-xs text-muted-foreground\">\n                Resolution rate: {stats.caseResolutionRate}\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Pending Reports</CardTitle>\n              <TrendingUp className=\"h-4 w-4 text-purple-500\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{stats.pendingReports}</div>\n              <p className=\"text-xs text-muted-foreground\">\n                Avg time: {stats.avgResolutionTime}\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Active Customers</CardTitle>\n              <Users className=\"h-4 w-4 text-green-500\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{stats.activeCustomers.toLocaleString()}</div>\n              <p className=\"text-xs text-muted-foreground\">\n                Under monitoring\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Charts and Recent Activity */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Alert Trends */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Alert Trends</CardTitle>\n              <CardDescription>Monthly alert generation over time</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart data={alertTrendData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"month\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Bar dataKey=\"alerts\" fill=\"#3b82f6\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n\n          {/* Risk Distribution */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Risk Distribution</CardTitle>\n              <CardDescription>Current customer risk profile breakdown</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <PieChart>\n                  <Pie\n                    data={riskDistributionData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                  >\n                    {riskDistributionData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip />\n                </PieChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Recent Alerts */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between\">\n            <div>\n              <CardTitle>Recent Alerts</CardTitle>\n              <CardDescription>Latest suspicious activity detections</CardDescription>\n            </div>\n            <Button variant=\"outline\" size=\"sm\">\n              View All\n            </Button>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {recentAlerts.map((alert) => (\n                <div key={alert.id} className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50\">\n                  <div className=\"flex items-center space-x-4\">\n                    {getStatusIcon(alert.status)}\n                    <div>\n                      <p className=\"font-medium\">{alert.customer}</p>\n                      <p className=\"text-sm text-gray-600\">{alert.type}</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-4 text-right\">\n                    <div>\n                      <p className=\"font-medium\">{alert.amount}</p>\n                      <p className=\"text-sm text-gray-600\">{alert.time}</p>\n                    </div>\n                    <Badge variant={getRiskBadgeColor(alert.risk) as any}>\n                      {alert.risk}\n                    </Badge>\n                    <Button variant=\"outline\" size=\"sm\">\n                      Investigate\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </Layout>\n  );\n}